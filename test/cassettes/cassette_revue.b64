{"version": 1, "interactions": [{"request": {"method": "GET", "uri": "https://starlight.academy/ajax/cards/?page=2", "body": null, "headers": {}}, "response": {"status": {"code": 200, "message": "OK"}, "headers": {"Date": ["Wed, 29 Nov 2023 07:29:21 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Language, Cookie"], "X-Frame-Options": ["SAMEORIGIN"], "Content-Language": ["en"], "Cache-Control": ["private"], "CF-Cache-Status": ["DYNAMIC"], "Report-To": ["{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=HZdkn68DQmFeZoF3G1jE%2BSnPi75FP6HaRDgBnGAhals%2BDnG8eWQf4QGVBQVAnnWSckwGknz7a7j%2BKKjAi%2BCbcAJPCKAmte%2Fp7%2BX2LFzONH4HfPsFP8%2Ft2H0CUR0gau%2FgZSgNYA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"], "NEL": ["{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"], "Server": ["cloudflare"], "CF-RAY": ["82d92397c92ea629-GRU"], "Content-Encoding": ["br"], "alt-svc": ["h3=\":443\"; ma=86400"]}, "body": {"string": "\n\n\n\n<div class=\"head-for-modal hidden\">\n  <span class=\"head-for-modal-title\">Cards (Stage girls) list | ReLIVE | Starlight Academy - Revue Starlight</span>\n  <span class=\"head-for-modal-description\">All the cards (stage girls)! Search by title, description, profile, message, ... and filter by school / stage girl, rarity, element, type, version, damage, position, roles, effective against, less effective against, target to find all the details you need about the cards (stage girls) from Revue Starlight. -- The Revue Starlight Database &amp; Community</span>\n</div>\n\n<div class=\"hidden page-title-wrapper\">\n<h1 class=\"page-title page-title-small page-title-card_list_ajax list-page-title list-page-title-card\">\n  <span class=\"text-muted page-title-prefixes\">\n    <a href=\"/relive/\">\n      ReLIVE\n      </a>\n    <span class=\"separator\">/</span>\n    \n    \n  </span>\n  \n    \n    <img src=\"//i.starlight.academy/static/img/red_dresses.png?0.15.2\" height=\"39\" class=\"h1-page-title-image h1-page-title-image-card_list_ajax\" />\n    \n    Cards (Stage girls) list\n    \n    \n</h1>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"row items list-items-card\" id=\"card-page-2\" data-page-number=\"2\">\n  \n    \n    \n  \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"1050017\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/1050017/Moon-Tendo-Maya-Stage-Girl/\" data-ajax-url=\"/ajax/card/1050017/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Moon Tendo Maya Stage Girl\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/1050017Moon-Tendo-Maya-\u821e\u53f0\u5c11\u5973-0qPgTj.png\" alt=\"\u2605\u2605\u2605\u2605 Moon Tendo Maya Stage Girl\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=1050017&amp;card_unicode=\u2605\u2605\u2605\u2605 Moon Tendo Maya Stage Girl&amp;card_item_url=/card/1050017/Moon-Tendo-Maya-Stage-Girl/&amp;card_image_url=//i.starlight.academy/u/card/1050017Moon-Tendo-Maya-\u821e\u53f0\u5c11\u5973-0qPgTj.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"2020012\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/2020012/Flower-Otonashi-Ichie-Whirlwind-Setsuna/\" data-ajax-url=\"/ajax/card/2020012/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Flower Otonashi Ichie Whirlwind Setsuna\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/2020012Flower-Otonashi-Ichie-\u65cb\u98a8\u306e\u5239\u90a3-DIpDrx.png\" alt=\"\u2605\u2605\u2605\u2605 Flower Otonashi Ichie Whirlwind Setsuna\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=2020012&amp;card_unicode=\u2605\u2605\u2605\u2605 Flower Otonashi Ichie Whirlwind Setsuna&amp;card_item_url=/card/2020012/Flower-Otonashi-Ichie-Whirlwind-Setsuna/&amp;card_image_url=//i.starlight.academy/u/card/2020012Flower-Otonashi-Ichie-\u65cb\u98a8\u306e\u5239\u90a3-DIpDrx.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"1030006\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/1030006/Moon-Tsuyuzaki-Mahiru-Hermit/\" data-ajax-url=\"/ajax/card/1030006/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Moon Tsuyuzaki Mahiru Hermit\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/1030006Moon-Tsuyuzaki-Mahiru-\u96a0\u8005-64A1od.png\" alt=\"\u2605\u2605\u2605\u2605 Moon Tsuyuzaki Mahiru Hermit\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=1030006&amp;card_unicode=\u2605\u2605\u2605\u2605 Moon Tsuyuzaki Mahiru Hermit&amp;card_item_url=/card/1030006/Moon-Tsuyuzaki-Mahiru-Hermit/&amp;card_image_url=//i.starlight.academy/u/card/1030006Moon-Tsuyuzaki-Mahiru-\u96a0\u8005-64A1od.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n</div><div class=\"row items\">\n    \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"2010012\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/2010012/Snow-Tomoe-Tamao-Evil-Banishing-Komachi/\" data-ajax-url=\"/ajax/card/2010012/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Snow Tomoe Tamao Evil Banishing Komachi\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/2010012Snow-Tomoe-Tamao-\u95c7\u65ad\u3061\u306e\u5c0f\u753a-mMjiUh.png\" alt=\"\u2605\u2605\u2605\u2605 Snow Tomoe Tamao Evil Banishing Komachi\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=2010012&amp;card_unicode=\u2605\u2605\u2605\u2605 Snow Tomoe Tamao Evil Banishing Komachi&amp;card_item_url=/card/2010012/Snow-Tomoe-Tamao-Evil-Banishing-Komachi/&amp;card_image_url=//i.starlight.academy/u/card/2010012Snow-Tomoe-Tamao-\u95c7\u65ad\u3061\u306e\u5c0f\u753a-mMjiUh.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"2050009\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/2050009/Cloud-Tanaka-Yuyuko-Demon-Hunter-Suiren/\" data-ajax-url=\"/ajax/card/2050009/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Cloud Tanaka Yuyuko Demon Hunter Suiren\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/2050009Cloud-Tanaka-Yuyuko-\u9b3c\u5bc4\u305b\u306e\u7761\u84ee-znDGSa.png\" alt=\"\u2605\u2605\u2605\u2605 Cloud Tanaka Yuyuko Demon Hunter Suiren\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=2050009&amp;card_unicode=\u2605\u2605\u2605\u2605 Cloud Tanaka Yuyuko Demon Hunter Suiren&amp;card_item_url=/card/2050009/Cloud-Tanaka-Yuyuko-Demon-Hunter-Suiren/&amp;card_image_url=//i.starlight.academy/u/card/2050009Cloud-Tanaka-Yuyuko-\u9b3c\u5bc4\u305b\u306e\u7761\u84ee-znDGSa.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"3030008\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/3030008/Cloud-Nonomiya-Lalafin-The-Hatter/\" data-ajax-url=\"/ajax/card/3030008/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Cloud Nonomiya Lalafin The Hatter\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/3030008Cloud-Nonomiya-Lalafin-\u30de\u30c3\u30c9\u30cf\u30c3\u30bf\u30fc-Bqm0SS.png\" alt=\"\u2605\u2605\u2605\u2605 Cloud Nonomiya Lalafin The Hatter\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=3030008&amp;card_unicode=\u2605\u2605\u2605\u2605 Cloud Nonomiya Lalafin The Hatter&amp;card_item_url=/card/3030008/Cloud-Nonomiya-Lalafin-The-Hatter/&amp;card_image_url=//i.starlight.academy/u/card/3030008Cloud-Nonomiya-Lalafin-\u30de\u30c3\u30c9\u30cf\u30c3\u30bf\u30fc-Bqm0SS.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n</div><div class=\"row items\">\n    \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"3020009\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/3020009/Space-Kano-Misora-The-Little-Prince/\" data-ajax-url=\"/ajax/card/3020009/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Space Kano Misora The Little Prince\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/3020009Space-Kano-Misora-\u661f\u306e\u738b\u5b50\u3055\u307e-j5VvEt.png\" alt=\"\u2605\u2605\u2605\u2605 Space Kano Misora The Little Prince\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=3020009&amp;card_unicode=\u2605\u2605\u2605\u2605 Space Kano Misora The Little Prince&amp;card_item_url=/card/3020009/Space-Kano-Misora-The-Little-Prince/&amp;card_image_url=//i.starlight.academy/u/card/3020009Space-Kano-Misora-\u661f\u306e\u738b\u5b50\u3055\u307e-j5VvEt.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"1060013\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/1060013/Wind-Hoshimi-Junna-Jo/\" data-ajax-url=\"/ajax/card/1060013/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Wind Hoshimi Junna Jo\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/1060013Wind-Hoshimi-Junna-\u30b8\u30e7\u30fc-DOGw5K.png\" alt=\"\u2605\u2605\u2605\u2605 Wind Hoshimi Junna Jo\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=1060013&amp;card_unicode=\u2605\u2605\u2605\u2605 Wind Hoshimi Junna Jo&amp;card_item_url=/card/1060013/Wind-Hoshimi-Junna-Jo/&amp;card_image_url=//i.starlight.academy/u/card/1060013Wind-Hoshimi-Junna-\u30b8\u30e7\u30fc-DOGw5K.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"1010013\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/1010013/Snow-Aijo-Karen-Vampire/\" data-ajax-url=\"/ajax/card/1010013/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Snow Aijo Karen Vampire\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/1010013Snow-Aijo-Karen-Vampire-76tZOG.png\" alt=\"\u2605\u2605\u2605\u2605 Snow Aijo Karen Vampire\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=1010013&amp;card_unicode=\u2605\u2605\u2605\u2605 Snow Aijo Karen Vampire&amp;card_item_url=/card/1010013/Snow-Aijo-Karen-Vampire/&amp;card_image_url=//i.starlight.academy/u/card/1010013Snow-Aijo-Karen-Vampire-76tZOG.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n</div><div class=\"row items\">\n    \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"4050006\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/4050006/Space-Tsuruhime-Yachiyo-Julius-Caesar/\" data-ajax-url=\"/ajax/card/4050006/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-DdCgUX.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=4050006&amp;card_unicode=\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar&amp;card_item_url=/card/4050006/Space-Tsuruhime-Yachiyo-Julius-Caesar/&amp;card_image_url=//i.starlight.academy/u/card/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-DdCgUX.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"3040012\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/3040012/Wind-Ebisu-Tsukasa-Lady-of-the-Spring/\" data-ajax-url=\"/ajax/card/3040012/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Wind Ebisu Tsukasa Lady of the Spring\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/3040012Wind-Ebisu-Tsukasa-\u6cc9\u306e\u5973\u795e-ImfB3D.png\" alt=\"\u2605\u2605\u2605\u2605 Wind Ebisu Tsukasa Lady of the Spring\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=3040012&amp;card_unicode=\u2605\u2605\u2605\u2605 Wind Ebisu Tsukasa Lady of the Spring&amp;card_item_url=/card/3040012/Wind-Ebisu-Tsukasa-Lady-of-the-Spring/&amp;card_image_url=//i.starlight.academy/u/card/3040012Wind-Ebisu-Tsukasa-\u6cc9\u306e\u5973\u795e-ImfB3D.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n    \n  \n    \n    \n  <div class=\"col-md-4\" data-item=\"card\" data-item-id=\"1040014\">\n    \n    \n    <div class=\"text-center top-item\">\n  \n  <a href=\"/card/1040014/Moon-Saijo-Claudine-Percival/\" data-ajax-url=\"/ajax/card/1040014/\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Moon Saijo Claudine Percival\">\n    \n    \n    <img src=\"//i.starlight.academy/u/card/1040014Moon-Saijo-Claudine-\u30d1\u30fc\u30b7\u30f4\u30a1\u30eb-hYhb8H.png\" alt=\"\u2605\u2605\u2605\u2605 Moon Saijo Claudine Percival\" class=\"card-image img-responsive\" style=\" max-height: 300px;\">\n    \n    \n    \n  </a>\n  \n</div>\n\n    \n\n<div class=\"below-item-buttons btn-group btn-group-justified\">\n  \n  \n  <a href=\"/signup/?next=/collectedcards/add/?card_number=1040014&amp;card_unicode=\u2605\u2605\u2605\u2605 Moon Saijo Claudine Percival&amp;card_item_url=/card/1040014/Moon-Saijo-Claudine-Percival/&amp;card_image_url=//i.starlight.academy/u/card/1040014Moon-Saijo-Claudine-\u30d1\u30fc\u30b7\u30f4\u30a1\u30eb-hYhb8H.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n     class=\"btn btn-link-main btn-lines \"\n     title=\"Add to your collected cards (stage girls)\"\n     data-alt-message=\"Edit your collected cards (stage girls)\"\n     data-unique-per-owner=\"true\"\n     \n     \n     \n     data-toggle=\"tooltip\"\n     data-placement=\"top\"\n     data-container=\"body\"\n     \n     >\n    <i class=\"flaticon-add\"></i>\n    \n    \n    <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n  </a>\n  \n  \n  \n  \n  \n  \n  \n  \n</div>\n\n\n\n\n\n    \n  </div>\n\n</div><div id=\"card-end-of-page-2\"></div>\n\n\n\n\n\n\n\n\n\n\n\n<div id=\"load_more\" class=\"padding20 text-center pagination-pages\" data-next-page=\"3\">\n  \n  <nav>\n    <ul class=\"pagination pagination-sm\">\n      <li class=\"\"><a href=\"/cards/?page=1\">&laquo;</a></li>\n      \n      <li class=\"\"><a href=\"/cards/?page=1\">1</a></li>\n      \n      <li class=\"active\"><a href=\"/cards/?page=2\">2</a></li>\n      \n      <li class=\"\"><a href=\"/cards/?page=3\">3</a></li>\n      \n      <li class=\"disabled\"><a href=\"#\">...</a></li>\n      \n      <li class=\"\"><a href=\"/cards/?page=24\">24</a></li>\n      \n      <li class=\"\"><a href=\"/cards/?page=3\">&raquo;</a></li>\n    </ul>\n  </nav>\n  \n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<script>\n  \n</script>\n\n<script>\n  \n  \n      \n      \n      \n      \n</script>\n\n"}}}, {"request": {"method": "GET", "uri": "https://starlight.academy/ajax/card/4050006", "body": null, "headers": {"Host": ["starlight.academy"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate, br"], "User-Agent": ["Python/3.12 aiohttp/3.9.1"]}}, "response": {"status": {"code": 301, "message": "Moved Permanently"}, "headers": {"Date": ["Wed, 29 Nov 2023 07:29:21 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Language"], "X-Frame-Options": ["SAMEORIGIN"], "Location": ["https://starlight.academy/ajax/card/4050006/"], "Content-Language": ["zh-hans"], "Cache-Control": ["private"], "CF-Cache-Status": ["DYNAMIC"], "Report-To": ["{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=6cg9lvS6TuRf8zPsZ%2FcbbFFnT8%2Bk%2Bv%2FOd6NpTg8On7XUk96FFmFWLM%2BdDvj0loge6jGhGCFR%2FMfGKV6qjE9Unsbp3kfJQKmBqwyw172q%2Fyzb%2F9UptjU386A5K%2BF1Ikp0RUOHfA%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"], "NEL": ["{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"], "Server": ["cloudflare"], "CF-RAY": ["82d9239e6b6c0b62-AMS"], "alt-svc": ["h3=\":443\"; ma=86400"]}, "body": {}}}, {"request": {"method": "GET", "uri": "https://starlight.academy/ajax/card/4050006/", "body": null, "headers": {"Host": ["starlight.academy"], "Accept": ["*/*"], "Accept-Encoding": ["gzip, deflate, br"], "User-Agent": ["Python/3.12 aiohttp/3.9.1"]}}, "response": {"status": {"code": 200, "message": "OK"}, "headers": {"Date": ["Wed, 29 Nov 2023 07:29:22 GMT"], "Content-Type": ["text/html; charset=utf-8"], "Transfer-Encoding": ["chunked"], "Connection": ["keep-alive"], "Vary": ["Accept-Language, Cookie"], "X-Frame-Options": ["SAMEORIGIN"], "Content-Language": ["en"], "Cache-Control": ["private"], "CF-Cache-Status": ["DYNAMIC"], "Report-To": ["{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=3D%2FO9Ml6aEnw0tSv%2FyW9BrpVx8TaZ4mpNRMQPvH%2Beey%2BsvMHKpJnTcub8TaZc340VXk%2BZP7WgKu%2FrQ%2FK%2FZn0pJzQx2hOD5Mu3uuQbyrIB99AvNxyM4o%2FWivyPHDgqV94Tcgwfg%3D%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"], "NEL": ["{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"], "Server": ["cloudflare"], "CF-RAY": ["82d923a0fe120b62-AMS"], "Content-Encoding": ["br"], "alt-svc": ["h3=\":443\"; ma=86400"]}, "body": {"string": "\n\n\n\n<div class=\"head-for-modal hidden\">\n  <span class=\"head-for-modal-title\">\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar | Cards (Stage girls) list | ReLIVE | Starlight Academy - Revue Starlight</span>\n  <span class=\"head-for-modal-description\">Balanced stats. Recovering Brilliance is her forte. Her powerful Climax Act applies Damage Received down. -- The Revue Starlight Database &amp; Community</span>\n</div>\n\n<div class=\"hidden page-title-wrapper\">\n<h1 class=\"page-title page-title-small page-title-card_item_ajax item-page-title item-page-title-card\">\n  <span class=\"text-muted page-title-prefixes\">\n    <a href=\"/relive/\">\n      ReLIVE\n      </a>\n    <span class=\"separator\">/</span>\n    \n    <a href=\"/cards/\">\n      Cards (Stage girls) list\n      </a>\n    <span class=\"separator\">/</span>\n    \n    \n  </span>\n  \n    \n    <img src=\"//i.starlight.academy/static/img/red_dresses.png?0.15.2\" height=\"39\" class=\"h1-page-title-image h1-page-title-image-card_item_ajax\" />\n    \n    \u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar\n    \n    \n</h1>\n</div>\n\n\n\n\n\n<div class=\"item-info card-info\">\n  <div class=\"text-center top-item\" style=\"padding: 20px;\">\n    \n    <a href=\"//i.starlight.academy/u/card/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-YCzdda.png\" target=\"_blank\">\n      <img src=\"//i.starlight.academy/u/card/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-DdCgUX.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar\" class=\"card-image\" style=\" max-height: 400px;\" data-hd-src=\"//i.starlight.academy/u/card/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-YCzdda.png\">\n    </a>\n    \n  </div>\n  <br>\n  \n\n\n  <table class=\"table about-table\">\n    \n    <tr data-field=\"name\">\n      <td>\n\t\n\t<i class=\"flaticon-id\"></i>\n\t\n      </td>\n      <th><span class=\"verbose-name\">Title</span></th>\n      <td>\n        \n\n\t\n\tJulius Caesar\n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"stage_girl\">\n      <td>\n\t\n\t<i class=\"flaticon-idol\"></i>\n\t\n      </td>\n      <th><span class=\"verbose-name\">Stage girl</span></th>\n      <td>\n        \n\n\t\n\t<span class=\"text_with_link\">Tsuruhime Yachiyo<br>\n\t  <a href=\"/stagegirl/13/Tsuruhime-Yachiyo/\" target=\"_blank\" data-ajax-url=\"/ajax/stagegirl/13/\" data-ajax-title=\"Tsuruhime Yachiyo\">\n\t    Open stage girl\n\t    <i class=\"flaticon-link fontx0-8\"></i>\n\t</a></span>\n\t<img src=\"//i.starlight.academy/u/stagegirl/s/13Tsuruhime-Yachiyo-TtQ11g.png\" alt=\"Open stage girl\" class=\"text_with_link_image\">\n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"rarity\">\n      <td>\n\t\n\t<img src=\"//i.starlight.academy/static/img/rarity.png?0.15.2\" alt=\"Rarity\">\n\t\n      </td>\n      <th><span class=\"verbose-name\">Rarity</span></th>\n      <td>\n        \n\n\t\n\t<a href=\"//i.starlight.academy/static/img/i_rarity/4.png?0.15.2\" target=\"_blank\">\n\t  <img src=\"//i.starlight.academy/static/img/i_rarity/4.png?0.15.2\" alt=\"Rarity\">\n\t</a>\n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"element\">\n      <td>\n\t\n\t<img src=\"//i.starlight.academy/static/img/color/space.png?0.15.2\" alt=\"Element\">\n\t\n      </td>\n      <th><span class=\"verbose-name\">Element</span></th>\n      <td>\n        \n\n\t\n\tSpace\n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"resists\">\n      <td>\n\t\n\t<img src=\"//i.starlight.academy/static/img/weak.png?0.15.2\" alt=\"Effective against\">\n\t\n      </td>\n      <th><span class=\"verbose-name\">Effective against</span></th>\n      <td>\n        \n\n\t\n        <div class=\"images\">\n        \n        <a href=\"/cards/?i_element=3\" class=\"a-nodifference\" target=\"_blank\" data-ajax-url=\"/ajax/cards/?ajax_modal_only&amp;i_element=3\" data-ajax-title=\"Cloud\">\n\t      <img src=\"//i.starlight.academy/static/img/color/cloud.png?0.15.2\" alt=\"Cloud\" data-toggle=\"tooltip\" title=\"Cloud\">\n        </a>\n        \n        </div>\n        \n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"weak\">\n      <td>\n\t\n\t<img src=\"//i.starlight.academy/static/img/resists.png?0.15.2\" alt=\"Less effective against\">\n\t\n      </td>\n      <th><span class=\"verbose-name\">Less effective against</span></th>\n      <td>\n        \n\n\t\n        <div class=\"images\">\n        \n        <a href=\"/cards/?i_element=4\" class=\"a-nodifference\" target=\"_blank\" data-ajax-url=\"/ajax/cards/?ajax_modal_only&amp;i_element=4\" data-ajax-title=\"Moon\">\n\t      <img src=\"//i.starlight.academy/static/img/color/moon.png?0.15.2\" alt=\"Moon\" data-toggle=\"tooltip\" title=\"Moon\">\n        </a>\n        \n        <a href=\"/cards/?i_element=6\" class=\"a-nodifference\" target=\"_blank\" data-ajax-url=\"/ajax/cards/?ajax_modal_only&amp;i_element=6\" data-ajax-title=\"Dream\">\n\t      <img src=\"//i.starlight.academy/static/img/color/dream.png?0.15.2\" alt=\"Dream\" data-toggle=\"tooltip\" title=\"Dream\">\n        </a>\n        \n        </div>\n        \n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"damage\">\n      <td>\n\t\n\t<img src=\"//i.starlight.academy/static/img/i_damage/normal.png?0.15.2\" alt=\"Damage\">\n\t\n      </td>\n      <th><span class=\"verbose-name\">Damage</span></th>\n      <td>\n        \n\n\t\n\tNormal\n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"position\">\n      <td>\n\t\n\t<img src=\"//i.starlight.academy/static/img/i_position/1.png?0.15.2\" alt=\"Position\">\n\t\n      </td>\n      <th><span class=\"verbose-name\">Position</span></th>\n      <td>\n        \n\n\t\n\tCenter\n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"cost\">\n      <td>\n\t\n\t<i class=\"flaticon-money\"></i>\n\t\n      </td>\n      <th><span class=\"verbose-name\">Cost</span></th>\n      <td>\n        \n\n\t\n\t12\n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"is_permanent\">\n      <td>\n\t\n\t<i class=\"flaticon-chest\"></i>\n\t\n      </td>\n      <th><span class=\"verbose-name\">Permanent</span></th>\n      <td>\n        \n\n\t\n\t\n\t<i class=\"flaticon-checked\"></i> Yes\n\t\n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"description\" class=\"long_text_field\">\n      <td>\n\t\n\t<i class=\"flaticon-about\"></i>\n\t\n      </td>\n      \n      <td colspan=\"2\">\n        \n        <strong class=\"long-text-title\">Description</strong>\n        \n\n\t\n        <div class=\"long-text-value\">Balanced stats. Recovering Brilliance is her forte. Her powerful Climax Act applies Damage Received down.</div>\n    \n      </td>\n    </tr>\n    \n    <tr data-field=\"profile\" class=\"long_text_field\">\n      <td>\n\t\n\t<i class=\"flaticon-id\"></i>\n\t\n      </td>\n      \n      <td colspan=\"2\">\n        \n        <strong class=\"long-text-title\">Profile</strong>\n        \n\n\t\n        <div class=\"long-text-value\">Roman consul whose famous words like &quot;The die&#39;s been cast&quot; and &quot;Et tu, Brute...&quot; are known to this day. Beloved by his subordinates and the masses alike for his bright personality and keen intellect. From &quot;Julius Caesar and Brutus.&quot;</div>\n    \n      </td>\n    </tr>\n    \n    <tr data-field=\"message\" class=\"long_text_field\">\n      <td>\n\t\n\t<i class=\"flaticon-chat\"></i>\n\t\n      </td>\n      \n      <td colspan=\"2\">\n        \n        <strong class=\"long-text-title\">Message</strong>\n        \n\n\t\n        <div class=\"long-text-value\">I&#39;m excited to be playing the role of Ancient Rome&#39;s most ambitious man!</div>\n    \n      </td>\n    </tr>\n    \n    <tr data-field=\"statistics\" class=\"long_text_field spread_across\">\n      <td>\n\t\n\t<i class=\"flaticon-statistics\"></i>\n\t\n      </td>\n      \n      <td colspan=\"2\">\n        \n        <strong class=\"long-text-title\">Statistics</strong>\n        \n\n\t\n\t\n  <div class=\"card-statistics\">\n    <div class=\"btn-group\" data-toggle=\"buttons\" data-control-tabs=\"card-4050006\">\n        \n                <label class=\"btn btn-space \" style=\"width: 50.0%\"\n                       data-open-tab=\"card-4050006-base\">\n\t        <input type=\"radio\" > Base\n                </label>\n            \n                <label class=\"btn btn-space active\" style=\"width: 50.0%\"\n                       data-open-tab=\"card-4050006-max_level\">\n\t        <input type=\"radio\" checked> Level 80\n                </label>\n            \n    </div>\n    <br><br>\n    <div class=\"tab-content\" data-tabs=\"card-4050006\">\n        \n            <div class=\"tab-pane \" data-tab=\"card-4050006-base\">\n            \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-hp\">HP</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_hp&reverse_order=on\" target=\"_blank\">#57</a></div>\n\t  <div class=\"col-xs-2 text-right\">1166</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 1.01206492492%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-act_power\">ACT Power</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_act_power&reverse_order=on\" target=\"_blank\">#17</a></div>\n\t  <div class=\"col-xs-2 text-right\">188</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 3.79032258065%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-normal_defense\">Normal defense</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_normal_defense&reverse_order=on\" target=\"_blank\">#22</a></div>\n\t  <div class=\"col-xs-2 text-right\">109</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 3.29305135952%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-special_defense\">Special defense</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_special_defense&reverse_order=on\" target=\"_blank\">#60</a></div>\n\t  <div class=\"col-xs-2 text-right\">71</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 1.57427937916%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-agility\">Agility</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_agility&reverse_order=on\" target=\"_blank\">#17</a></div>\n\t  <div class=\"col-xs-2 text-right\">183</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 5.04132231405%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n      </div>\n            \n            <div class=\"tab-pane active\" data-tab=\"card-4050006-max_level\">\n            \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-hp\">HP</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_hp&reverse_order=on\" target=\"_blank\">#57</a></div>\n\t  <div class=\"col-xs-2 text-right\">19686</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 33.3152817736%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-act_power\">ACT Power</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_act_power&reverse_order=on\" target=\"_blank\">#17</a></div>\n\t  <div class=\"col-xs-2 text-right\">2097</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 62.5223613596%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-normal_defense\">Normal defense</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_normal_defense&reverse_order=on\" target=\"_blank\">#22</a></div>\n\t  <div class=\"col-xs-2 text-right\">1213</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 53.5777385159%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-special_defense\">Special defense</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_special_defense&reverse_order=on\" target=\"_blank\">#60</a></div>\n\t  <div class=\"col-xs-2 text-right\">783</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 25.6385068762%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n\t<div class=\"row\">\n\t  <div class=\"col-xs-4 text-left\"><span class=\"stat-label-agility\">Agility</span></div>\n\t  <div class=\"col-xs-2 text-center\"><a href=\"/cards/?i_rarity=4&ordering=delta_agility&reverse_order=on\" target=\"_blank\">#17</a></div>\n\t  <div class=\"col-xs-2 text-right\">1761</div>\n\t  <div class=\"col-xs-4\">\n\t    <div class=\"progress\">\n\t      <div class=\"progress-bar progress-bar-space progress-bar-striped\"\n\t\t   role=\"progressbar\"\n\t\t   style=\"width: 83.3412210128%;\">\n\t      </div>\n\t    </div>\n\t  </div>\n        </div>\n        \n      </div>\n            \n    </div>\n  </div>\n        \n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"acts\" class=\"long_text_field spread_across\">\n      <td>\n\t\n\t<i class=\"flaticon-skill\"></i>\n\t\n      </td>\n      \n      <td colspan=\"2\">\n        \n        <strong class=\"long-text-title\">Acts</strong>\n        \n\n\t\n        \n        \n\n\n<h3 class=\"acts-title\">Basic</h3>\n\n\n\n<div class=\"panel panel-space act act-basic act-with-top-details\" data-act-pk=\"966\">\n  \n  \n  <div class=\"act-top\">\n    \n    <span class=\"label label-default label-space\">AP</span>\n    <span class=\"label-value\">2</span>\n    \n  </div>\n  \n  <div class=\"panel-heading\">\n    <span>\n      Strike of Brilliance\n    </span>\n  </div>\n  \n  <div class=\"panel-body\">\n    \n    <div class=\"row\">\n      <div class=\"col-xs-2\">\n        <img src=\"//i.starlight.academy/u/act/966B-Strike-of-Brilliance-Low-damage-to-front-enemy-Low-Brilliance-recovery-to-self-P5SYEB.png\" alt=\"Strike of Brilliance\" class=\"act-image\">\n      </div>\n      <div class=\"col-xs-10\">\n        \n        <p>Low damage to front enemy. Low Brilliance recovery to self.</p>\n        \n        \n        \n        \n        \n      </div>\n    </div>\n    \n  </div>\n</div><br>\n\n\n\n\n\n\n\n\n<div class=\"panel panel-space act act-basic act-with-top-details\" data-act-pk=\"964\">\n  \n  \n  <div class=\"act-top\">\n    \n    <span class=\"label label-default label-space\">AP</span>\n    <span class=\"label-value\">3</span>\n    \n  </div>\n  \n  <div class=\"panel-heading\">\n    <span>\n      Rondo of Brilliance\n    </span>\n  </div>\n  \n  <div class=\"panel-body\">\n    \n    <div class=\"row\">\n      <div class=\"col-xs-2\">\n        <img src=\"//i.starlight.academy/u/act/964B-Rondo-of-Brilliance-Medium-damage-to-front-enemy-Medium-Brilliance-recovery-to-mZnLAM.png\" alt=\"Rondo of Brilliance\" class=\"act-image\">\n      </div>\n      <div class=\"col-xs-10\">\n        \n        <p>Medium damage to front enemy. Medium Brilliance recovery to 2 allies with the highest Act Power.</p>\n        \n        \n        \n        \n        \n      </div>\n    </div>\n    \n  </div>\n</div><br>\n\n\n\n\n\n\n\n\n<div class=\"panel panel-space act act-basic act-with-top-details\" data-act-pk=\"965\">\n  \n  \n  <div class=\"act-top\">\n    \n    <span class=\"label label-default label-space\">AP</span>\n    <span class=\"label-value\">3</span>\n    \n  </div>\n  \n  <div class=\"panel-heading\">\n    <span>\n      Ambitious Strike\n    </span>\n  </div>\n  \n  <div class=\"panel-body\">\n    \n    <div class=\"row\">\n      <div class=\"col-xs-2\">\n        <img src=\"//i.starlight.academy/u/act/965B-Ambitious-Strike-High-damage-to-front-enemy-Act-Power-up-Dexterity-up-FWINf8.png\" alt=\"Ambitious Strike\" class=\"act-image\">\n      </div>\n      <div class=\"col-xs-10\">\n        \n        <p>High damage to front enemy. Act Power up &amp; Dexterity up &amp; Critical up to self.</p>\n        \n        \n        \n        \n        \n      </div>\n    </div>\n    \n  </div>\n</div><br>\n\n\n\n\n\n\n<h3 class=\"acts-title\">Climax</h3>\n\n\n\n<div class=\"panel panel-space act act-climax act-with-top-details\" data-act-pk=\"967\">\n  \n  \n  <div class=\"act-top\">\n    \n    <span class=\"label label-default label-space\">AP</span>\n    <span class=\"label-value\">2</span>\n    \n  </div>\n  \n  <div class=\"panel-heading\">\n    <span>\n      Treacherous Die\n    </span>\n  </div>\n  \n  <div class=\"panel-body\">\n    \n    <div class=\"row\">\n      <div class=\"col-xs-2\">\n        <img src=\"//i.starlight.academy/u/act/967C-Treacherous-Die-Very-high-damage-to-all-enemies-Brilliance-Regen-Damage-056PDB.png\" alt=\"Treacherous Die\" class=\"act-image\">\n      </div>\n      <div class=\"col-xs-10\">\n        \n        <p>Very high damage to all enemies. Brilliance Regen &amp; Damage received down to all allies.</p>\n        \n        \n        \n        \n        \n      </div>\n    </div>\n    \n  </div>\n</div><br>\n\n\n\n\n\n        \n        \n        <br><a href=\"/acts/?card=4050006\" class=\"btn-link-secondary padding10 hidden\"\n                data-ajax-url=\"/ajax/acts/?card=4050006&amp;ajax_modal_only\" data-ajax-title=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - Acts\">\n          + 0 acts - View all\n        </a>\n        \n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"ww_release_date\">\n      <td>\n\t\n\t<i class=\"flaticon-date\"></i>\n\t\n      </td>\n      <th><span class=\"verbose-name\">Release date - Worldwide version</span></th>\n      <td>\n        \n\n\t\n\t\n\t<span class=\"timezone\" data-to-timezone=\"Local time\"\n\t      >\n\t  <span class=\"datetime\">December 18, 2020 00:00:00 </span>\n\t  (<span class=\"current_timezone\">UTC</span>)\n\t</span><br>\n\t\n        \n        <small class=\"text-muted\"><span class=\"timezone\" data-timeago=\"true\" style=\"display: none;\">\n\t    <span class=\"datetime\">December 18, 2020 00:00:00 </span>\n\t</span></small>\n        \n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"jp_release_date\">\n      <td>\n\t\n\t<i class=\"flaticon-date\"></i>\n\t\n      </td>\n      <th><span class=\"verbose-name\">Release date - Japanese version</span></th>\n      <td>\n        \n\n\t\n\t\n\t<span class=\"timezone\" data-to-timezone=\"Local time\"\n\t      >\n\t  <span class=\"datetime\">September 25, 2020 00:00:00 </span>\n\t  (<span class=\"current_timezone\">UTC</span>)\n\t</span><br>\n\t\n        \n        <small class=\"text-muted\"><span class=\"timezone\" data-timeago=\"true\" style=\"display: none;\">\n\t    <span class=\"datetime\">September 25, 2020 00:00:00 </span>\n\t</span></small>\n        \n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"icon\">\n      <td>\n\t\n\t<i class=\"flaticon-pictures\"></i>\n\t\n      </td>\n      <th><span class=\"verbose-name\">Icon</span></th>\n      <td>\n        \n\n\t\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-IJFdp6.png\" target=\"_blank\" data-rank=\"1\" data-rarity=\"4\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-IJFdp6.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605 Rank 1\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-kTtxdb.png\" target=\"_blank\" data-rank=\"1\" data-rarity=\"5\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-kTtxdb.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605 Rank 1\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-EcO6J5.png\" target=\"_blank\" data-rank=\"1\" data-rarity=\"6\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-EcO6J5.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605\u2605 Rank 1\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-XI3aDo.png\" target=\"_blank\" data-rank=\"2\" data-rarity=\"4\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-XI3aDo.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605 Rank 2\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-zgcdzq.png\" target=\"_blank\" data-rank=\"2\" data-rarity=\"5\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-zgcdzq.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605 Rank 2\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-tj0t55.png\" target=\"_blank\" data-rank=\"2\" data-rarity=\"6\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-tj0t55.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605\u2605 Rank 2\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-WRckI9.png\" target=\"_blank\" data-rank=\"3\" data-rarity=\"4\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-WRckI9.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605 Rank 3\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-S6NmKd.png\" target=\"_blank\" data-rank=\"3\" data-rarity=\"5\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-S6NmKd.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605 Rank 3\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-4h33AU.png\" target=\"_blank\" data-rank=\"3\" data-rarity=\"6\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-4h33AU.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605\u2605 Rank 3\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-WRckI9.png\" target=\"_blank\" data-rank=\"4\" data-rarity=\"4\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-WRckI9.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605 Rank 4\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-S6NmKd.png\" target=\"_blank\" data-rank=\"4\" data-rarity=\"5\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-S6NmKd.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605 Rank 4\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-4h33AU.png\" target=\"_blank\" data-rank=\"4\" data-rarity=\"6\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-4h33AU.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605\u2605 Rank 4\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-5QyxE2.png\" target=\"_blank\" data-rank=\"5\" data-rarity=\"4\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-5QyxE2.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605 Rank 5\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-b5U02k.png\" target=\"_blank\" data-rank=\"5\" data-rarity=\"5\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-b5U02k.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605 Rank 5\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-ed4dzr.png\" target=\"_blank\" data-rank=\"5\" data-rarity=\"6\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-ed4dzr.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605\u2605 Rank 5\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-5QyxE2.png\" target=\"_blank\" data-rank=\"6\" data-rarity=\"4\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-5QyxE2.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605 Rank 6\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-b5U02k.png\" target=\"_blank\" data-rank=\"6\" data-rarity=\"5\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-b5U02k.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605 Rank 6\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-ed4dzr.png\" target=\"_blank\" data-rank=\"6\" data-rarity=\"6\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-ed4dzr.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605\u2605 Rank 6\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-xdDTAK.png\" target=\"_blank\" data-rank=\"7\" data-rarity=\"4\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-xdDTAK.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605 Rank 7\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-2hqQ8u.png\" target=\"_blank\" data-rank=\"7\" data-rarity=\"5\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-2hqQ8u.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605 Rank 7\">\n\t</a>\n        \n\t<a href=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-KAIzsN.png\" target=\"_blank\" data-rank=\"7\" data-rarity=\"6\">\n\t  <img src=\"//i.starlight.academy/u/card/icon/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-KAIzsN.png\" alt=\"\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar - \u2605\u2605\u2605\u2605\u2605\u2605 Rank 7\">\n\t</a>\n        \n\t\n      </td>\n    </tr>\n    \n    <tr data-field=\"art\">\n      <td>\n\t\n\t<i class=\"flaticon-pictures\"></i>\n\t\n      </td>\n      <th><span class=\"verbose-name\">Art</span></th>\n      <td>\n        \n\n\t\n        <a href=\"//i.starlight.academy/u/card/art/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-s2pWHn.png\" target=\"_blank\">\n\t  <img src=\"//i.starlight.academy/u/card/art/tthumb/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-IB9AEk.png\" alt=\"Art\">\n        </a>\n\t    \n      </td>\n    </tr>\n    \n    <tr data-field=\"transparent\">\n      <td>\n\t\n\t<i class=\"flaticon-pictures\"></i>\n\t\n      </td>\n      <th><span class=\"verbose-name\">Transparent</span></th>\n      <td>\n        \n\n\t\n        <a href=\"//i.starlight.academy/u/card/transparent/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-Xne73e.png\" target=\"_blank\">\n\t  <img src=\"//i.starlight.academy/u/card/transparent/tthumb/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-yBLQiR.png\" alt=\"Transparent\">\n        </a>\n\t    \n      </td>\n    </tr>\n    \n    <tr data-field=\"collectedcards\">\n      <td>\n\t\n\t<img src=\"//i.starlight.academy/static/img/dresses.png?0.15.2\" alt=\"Collected cards\">\n\t\n      </td>\n      <th><span class=\"verbose-name\">Collected cards</span></th>\n      <td>\n        \n\n\t\n\t<span class=\"text_with_link\">100 collected cards<br>\n\t  <a href=\"/accounts/?collected_card=4050006\" target=\"_blank\" data-ajax-url=\"/ajax/accounts/?collected_card=4050006&amp;ajax_modal_only\" data-ajax-title=\"100 collected cards\">\n\t    View all\n\t    <i class=\"flaticon-link fontx0-8\"></i>\n\t</a></span>\n\t<img src=\"//i.starlight.academy/static/img/dresses.png?0.15.2\" alt=\"View all\" class=\"text_with_link_image\">\n\t\n      </td>\n    </tr>\n    \n    \n    \n    \n    <tr data-field=\"collectedcard\">\n      <td>\n        <i class=\"flaticon-add\"></i>\n        \n      </td>\n      <th>\n        Add to your collected cards (stage girls)\n        \n      </th>\n      <td>\n        <a href=\"/signup/?next=/collectedcards/add/?card_number=4050006&amp;card_unicode=\u2605\u2605\u2605\u2605 Space Tsuruhime Yachiyo Julius Caesar&amp;card_item_url=/card/4050006/Space-Tsuruhime-Yachiyo-Julius-Caesar/&amp;card_image_url=//i.starlight.academy/u/card/4050006Space-Tsuruhime-Yachiyo-\u30b8\u30e5\u30ea\u30a2\u30b9-\u30b7\u30fc\u30b6\u30fc-DdCgUX.png&amp;card_i_rarity=4&amp;next_title=Edit card\" data-btn-name=\"collectedcard\"\n           class=\"btn btn-secondary btn-lines btn-lg \"\n           title=\"Add to your collected cards (stage girls)\"\n           data-alt-message=\"Edit your collected cards (stage girls)\"\n           data-unique-per-owner=\"true\"\n           \n           \n           >\n          <i class=\"flaticon-add\"></i>\n          \n          \n          <span class=\"badge progress-bar-main\" style=\"display: none;\">0</span>\n        </a>\n      </td>\n    </tr>\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    <tr data-field=\"comments\">\n      <td><i class=\"flaticon-comments\"></i></td>\n      <th>Comments</th>\n      <td>\n\t<a href=\"https://starlight.academy/card/4050006/Space-Tsuruhime-Yachiyo-Julius-Caesar/#disqus_thread\" class=\"btn btn-lg btn-secondary\" target=\"_blank\">\n\t  Comments\n\t</a>\n      </td>\n    </tr>\n    \n    \n    <tr data-field=\"share\">\n      <td><i class=\"flaticon-link\"></i></td>\n      <th>Share</th>\n      <td>\n\t<span class=\"btn-group\">\n\t  \n<a href=\"https://starlight.academy/card/4050006/Space-Tsuruhime-Yachiyo-Julius-Caesar/\" class=\"btn share-button btn-secondary btn-lg\" target=\"_blank\" data-copy-to-clipboard=\"https://starlight.academy/card/4050006/Space-Tsuruhime-Yachiyo-Julius-Caesar/\">\n  <img src=\"//i.starlight.academy/static/img/links/share-copy.png?0.15.2\" alt=\"Copy\" />\n</a>\n<a href=\"http://twitter.com/share?text=%E2%98%85%E2%98%85%E2%98%85%E2%98%85%20Space%20Tsuruhime%20Yachiyo%20Julius%20Caesar&url=https%3A//starlight.academy/card/4050006/Space-Tsuruhime-Yachiyo-Julius-Caesar/&hashtags=\u30b9\u30bf\u30a1\u30e9\u30a4\u30c8,RevueStarlight,Starira,RevueStarlightReLIVE,&via=r_starlight_en\" class=\"btn share-button btn-secondary btn-lg\" target=\"_blank\">\n  <img src=\"//i.starlight.academy/static/img/links/twitter.png?0.15.2\" alt=\"Twitter\" />\n</a>\n<a href=\"http://www.facebook.com/sharer/sharer.php?u=https%3A//starlight.academy/card/4050006/Space-Tsuruhime-Yachiyo-Julius-Caesar/\" class=\"btn share-button btn-secondary btn-lg\" target=\"_blank\">\n  <img src=\"//i.starlight.academy/static/img/links/facebook.png?0.15.2\" alt=\"Facebook\" />\n</a>\n<a href=\"http://www.reddit.com/submit?url=https%3A//starlight.academy/card/4050006/Space-Tsuruhime-Yachiyo-Julius-Caesar/&title=%E2%98%85%E2%98%85%E2%98%85%E2%98%85%20Space%20Tsuruhime%20Yachiyo%20Julius%20Caesar\" class=\"btn share-button btn-secondary btn-lg\" target=\"_blank\">\n  <img src=\"//i.starlight.academy/static/img/links/reddit.png?0.15.2\" alt=\"Reddit\" />\n</a>\n\n\t</span>\n      </td>\n    </tr>\n    \n    \n  </table>\n\n</div>\n\n\n\n\n\n\n\n\n\n\n<script>\n  \n</script>\n\n<script>\n  \n  loadBaseCard();\n  \n  \n      \n      \n      \n      \n</script>\n\n"}}}]}